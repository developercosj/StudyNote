Spring 의 IOC 빈 주입시 순환참조의 문제가 발생할 수 있다.

- 기본
    - 스프링 컨테이너가 빈을 생성할 때 Bean A 와 Bean B가 서로 참조하고 있는 상황이라 어떤 빈을 먼저 만들어야 할지 결정할 수 없을때 발생한다.
      즉 Bean A 를 만들때 Bean B 가 필요한데 Bean B를 만들떄 Bean A가 필요하기 때문에 문제가 발생한다.
    - 빈생성 방법 : 필드생성, Setter 생성, 생성자 생성

- 주입방식에 따른 문제 발생
    - 1) 필드, Setter 주입방식일 때 순환참조 발생
        - 애플리케이션을 구동시 문제가 발생하지 않는다. 그 이유는 만약 필드주입과 Setter 주입모두 각각 빈이 사용하지 않을 때는 Null 상태로 있을 수 있기 떄문이다.
          그렇지만 실제로 Bean 이 만들어져야 하는 즉 사용시점인 빈이 Null 이면 안되는 때에 (메서드 호출 시 ) 문제가 발생한다.
    - 2)  생성자 주입방식일 때 순환참조 발생
        - 생성자가 생성되는 시기인 애플리케이션이 구동 시 문제가 발생한다. 이때 빈을 생성하려고 하기 때문에 문제가 발생한다.
          Bean A생성자를 만들때 주입해야하는 빈인 Bean B를 파라미터로 넣어주기 때문에 이때 Bean B의 빈생성이 되어야 하지만 Bean B 생성을 하려면 Bean A 가 필요하다 따라서 이것이 무한반복되게 된다.

- 일시적 문제 해결 방식
    - 1) @Lazy
        @Lazy를 생성자 파라미터에 넣어주는 빈 앞에 붙여주면 빈 생성 시점을 나중으로 미뤄서 컴파일 시점에서는 문제가 발생되지 않으나 객체를 사용하려고 할 때 문제가 발생하게 된다.
        런타임 이후에 문제가 발생하게 된다.
        따라서 문제의 원인을 해결하지 않은채로 문제발생을 뒤로 미루는 방식이 되기 때문에 사용을 지양해야 한다.

- 근본적 문제 해결 방식
    - 설계적인 방법

- 생성자 주입 방식의 장점
    Field 주입은 편하게 사용가능하나 문제가 발생할 수 있다.
    - 순환참조를 컴파일 시점에 감지
    - 테스트 코드 작성 용이
        단위테스트를 수행할 때 field injection 을 사용하여 작성된 클래스인 경우 injection 한 객체를 테스트시 생성할 수 없기 때문에 (컨테이너가 만들어주니까)
        생성자 주입을 해야지 injection 한 객체를 사용할 수 있다.


