1. JDBC(Java DataBase Connectivity)란 Java와 데이터베이스를 연결하기 위한 Java 표준 인터페이스
    여러 DB 드라이버를 제공
2. JdbcTemplate
    - SQL Mapper 기술(SQL 문장으로 직접 데이터베이스를 다루는 시스템, 복잡한 쿼리 작성시 효과적이나 SQL, Java 코드가 분리되어 있어 객체 및 쿼리문 모두 관리 필요)
    - 설정 편리하며 중복을 없앰
    - Data Access 기술
    - 템플릿 콜백 패턴을 사용하여 JDBC를 직접 사용시 발생하는 반복의 문제를 대신 처리
    - DriveManager가 하는 일들을 SQL Mapper 중 하나인 JdbcTemplate 에게 맡김
        - connection 획득및 Statement 준비,실행 및 ResultSet Row 에 반복 접근하여 결과 얻고 앞선 자원들 반환등의 역할을 처리해줌
    - 단점
        - SQL 을 직접 작성해야 하는 단점이 있음
        - 조건에 맞게 검색하는 등의 동적 SQL 을 작성하기 어려움 -> MyBatis 로 해결
3. Mybatis
    - SQL Mapper 의 한 종류
    - SQL 쿼리를 Java 코드에 직접 작성하지 않고 XML 파일에 별도로 관리하고 인터페이스로 매핑
    - 커넥션을 자동으로 관리하지 않아 SQLSession 을 열고 실행및 크로즈 과정이 필요
    - 쿼리, Java 코드 분리의 장점
    - 세션 오픈 크로즈 과정및 인터페이스 관리등의 번거로움 존재

4. JPA( JAVA Persistent API)
    - Java ORM 기술에 대한 API 표준 명세 Java 에서 제공하는 API
    - ORM 사용 위한 표준 인터페이스를 모아둠
    - 내부적으로 JDBC 사용
    - 쿼리를 통해 접근하지 않고 ORM 기술을 이용해 객체를 통해 간접적으로 접근
    - 단점
        - 복잡한 SQL 수행이 어려움
        - 쿼리 성능 최적화가 어려움