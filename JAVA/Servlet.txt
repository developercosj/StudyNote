- 자바 서블릿(Java Servlet == 서블릿)은 자바를 사용하여 웹페이지를 동적으로 생성하는 서버의 프로그램 및 사양
- 웹 서버의 성능 향상 위해 사용되는 자바 클래스의 일종
- JSP는 HTML 문서 안에 Java 코드를 포함하고 있는 반면, 서블릿은 자바 코드 안에 HTML 을 포함
- 자바 EE 사양의 일부분
- 서블릿을 이용하여 웹 페이지를 동적으로 생성하여 클라이언트에게 반환
- Servlet 의 코드 예시
    @WebServlet(name = "servletTest", urlPatterns = "/servletTest")
    public class ServletTest extends HttpServlet {
        @Override
        protexted void service(HttpServletRequest request, HttpServletResponse response) throws ServletException {
            // 로직
        }
    }
    - urlPatterns("/hello") 의 URL이 호출되면 서블릿 코드가 실행
    - HttpServletRequest를 통해 HTTP 요청 정보를 사용
    - HttpServletResponse를 통해 HTTP 응답 정보를 사용

- 서블릿 작동 내부
    1) 사용자가 URL 입력시 요청이 서블릿 컨테이너로 전송
    2) 요청 전송 받은 서블릿 컨테이너는 Http Request, Http Response 객체 생성
    3) 서블릿의 service() 메서드 호출 후 doGet(), doPost() 메소드 호출
    4) 동적 페이지를 생성한 후 HttpServletResponse 객체에 응답을 보낸다.
    5) 클라이언트에게 응답한 후 HttpServletRequest, HttpServletResponse 객체 소멸
- 서블릿 생명주기
    클라이언트 요청 -> 서블릿컨테이너는 서블릿이 메모리에 있는지 확인하여 없으면 init() 메서드 호출하여 적재
                   클라이언트 요청에 따라서 service() 메서드를 통해 doGet(), doPost() 로 분기
                   서블릿 컨테이너가 서블릿에 종료 요청을 하면 destory() 메서드 호출
                   destory() 메서드 오버라이딩 후 종료 후 처리 작업 구현 가능
                   메서드가 끝난 서블릿 인스턴스는 GC에 제거대상이 됨
- 일반 객체와 차이점
    JVM 에서 호출방식은 서블릿과 일반 클래스 동일하나 서블릿은 main() 메서드 호출이 아닌 웹 컨테이너(Servlet Container) 에 의해 실행된다.
    컨테이너가 web.xml 을 읽어 서블릿 클래스를 클래스 로더에 등록한다.
- Was중 하나인 tomcat 이 servlet Container(서블릿 객체 생성, 초기화, 호출, 종료등의 생명주기 관리, 웹서버와 소켓으로 통신함) 기능을 제공한다.
- 서블릿 컨테이너는 개발자가 비즈니스 로직에 집중할 수 있도록 해당 과정을 모두 자동으로 해준다.
    HTTP 요청 메시지로 생성된 request 를 읽어서 비즈니스 로직 수행후 response 반환의 간단한 작업만 수행하면 된다.
- 서블릿 컨테이너는 멀티스레딩을 관리해준다 (요청시 자바 스레드 생성하여 다중처리가 가능, 서블릿 인스턴스는 싱글톤으로 생성되기 때문에 인스턴스 객체를 생성하는 것은 아님)














