1. fetch Error 발생

    1-1. URL 경로 문제 및 경로 파일 위치 확인 확인
    springdoc.swagger-ui.url 에 resource 밑에 classpath:swagger-config-local.yaml 로 저장해놓았고 swagger 에서 여러가지 경로를 검색창에 쳤을때 404도 나오는 것으로 봐서는 파일 위치는 정상으로 보임
    1-2. cors 오류 (Cross-Origin Resource Sharing)
        Swagger UI 와 API 명세 파일이 서로 다른 도메인에 있을때 CORS 문제 발생 가능
        서버에서 CORS 를 허용해야 할 필요가 있음
    1-3. 명세 파일 형식 확인
        - 현재 정상적으로 작동하고 있는 default 파일을 복붙해놨기 때문에 문제가 없을 것으로 예상


- api-docs 설정을 잘못하면 에러 : Failed to load remote configuration
- swagger-ui url 잘못 설정하면 :
        Errors
        Hide

        Fetch error
        Failed to fetch classpath:openapi/swagger-config-local.yaml
        Fetch error
        Possible cross-origin (CORS) issue? The URL origin (null) does not match the page (http://localhost:9999). Check the server returns the correct 'Access-Control-Allow-*' headers.
    - 설정 참고 : https://bol-bbang.tistory.com/80

    결론 :
    Swagger 에서 사용하는 yaml 파일의 디폴트는 application.yml 파일에 springdoc: swagger-ui: url: 에 설정되는데 (생략하면 Default) /v3/api-docs.yaml 를 사용한다.

            CODE )  application.yml
                springdoc:
                  api-docs:
                    path: /v3/api-docs
                  swagger-ui:
                    path: /swagger-ui.html
                    url: /v3/api-docs.yaml

    하지만 나는 이것이 아닌 Custom yaml 파일을 생성해서 사용하려고 한다. (상세한 수정등이 가능하도록)
    그래서 resources/swagger 폴더 아래에서 파일을 관리하려고 했다.
    일반적으로 API 를 전송시 Filter 를 거쳐서 URL 의 EndPoint 마다 처리를 해준다.
    처음에는 springdoc: api-docs: path: 에서 설정한 /v3/api-docs랑 Swagger UI 페이지에 접근하기 위한 swagger-ui: path: 도 접근이 되지 않았다. 따라서 Filter 에서 이 URL 로 접근하는 요청은 필터를 제외해주었고 Custom yaml 파일에 접근하려는 URL 도 또한 필터에서 제외해 주는 코드를 작성했다.


        CODE )
              @Component
              class CommonFilter()
                : OncePerRequestFilter() {

                    // Swagger UI 사용시 관련 경로는 필터 제외
                    @Throws(ServletException::class)
                    override fun shouldNotFilter(request: HttpServletRequest): Boolean {
                        val excludePath = arrayOf("/swagger-ui", "/v3/api-docs", "/swagger")
                        val path = request.requestURI
                        return Arrays.stream(excludePath).anyMatch(path::startsWith)
                    }

              }



    그 다음에 문제는 resources 폴더 밑에 정적 파일이 접근이 가능하도록 명시해주는 것이 필요했다.
    /swagger/ 경로로 접근하면 resources 폴더 하위에 있는 swagger 폴더로 이동하여 swagger 폴더 밑에 있는 파일을 읽을 수 있도록 수정해주었다.
    보안을 위해서 swagger 라는 폴더를 따로 만들고 그 폴더만 접근하도록 만들었다.


        CODE )

            import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry

            @EnableWebMvc
            @Configuration
            class WebConfig(
                private val authInterceptor: AuthInterceptor
            ): WebMvcConfigurer {

                override fun addResourceHandlers(registry: ResourceHandlerRegistry) {
                    registry.addResourceHandler("/swagger/**")
                            .addResourceLocations("classpath:/swagger/")
                }
            }



    application.yml 파일에 custom yaml 파일 지정

        CODE )
            springdoc:
              api-docs:
                path: /v3/api-docs  # API 문서의 경로를 커스터마이즈
              swagger-ui:
                path: /swagger-ui/index.html
                urls:
                  - name: Custom API Docs
                    url: /swagger/swagger-config-local.yaml  # Custom YAML 파일의 경로

