
1. 신뢰성, 확장 가능성, 유지보수성

- 애플리케이션의 데이터 중심적인 특성으로 애플리케이션의 CPU 성능보다 데이터의 양, 복잡도, 변화 속도등이 더 중요한 문제가 될 수 있다.
- 데이터베이스, 캐시(읽기 속도 향상), 검색 색인(사용자가 키워드등으로 검색가능하도록 필터링 제공)
    
    스트림 처리(비동기 처리를 위해 다른 프로세스로 메시지 보내기), 일괄처리(주기적으로 대량의 누적된 데이터를 분석)
    
- 데이터 시스템 : 데이터베이스, 큐, 캐시
    - 메시지 큐
        - datastore 인 레디스(Redis)
        - 지속성 보장하는 메시지큐인 아파치 카프카(Apache Kafka)
- 소프트웨어 시스템의 중요한 세가지 요소
    - 신뢰성 : 하드웨어, 소프트웨어 결함, 인지오류의 문제시 시스템이 지속적으로 올바르게 동작(원하는 성능수준으로 정확한 기능 수행)
        - 결함을 예측하고 대처할 수 있는 시스템인 탄력성을 갖춘 시스템이 되어야 한다
        - 장애란 : 사용자에게 필요한 서비스를 제공하지 못하고 시스템 전체가 멈춘 경우
    - 확장성 : 시스템의 데이터의 양, 트래픽의 양, 복잡도 증가 → 처리할 수 이는 적절한 방법 존재
    - 유지보수성 : 다양한 사람들의 작업시 모든 사용자가 시스템 상에서 생산적으로 작업해야 한다.