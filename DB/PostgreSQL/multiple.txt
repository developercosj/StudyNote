1. basic

    - Databases are physically separated and access control is managed at the connection level
    - Schemas are a purely logical structure and who can access what is managed by the privilege system
    - database is a collection of schemas and the schemas contain the tables, functions, etc

2. connecting to the database server
    - a client must specify in its connection request the name of the database (it wants to connect to)
    - per connection, it can be connected to one database
    But an application is not restricted in the number of connections it opens to the same or other databases.

3. difference between separated database and several schema

    -  separated database :   when most part unaware of each other, users that should be separate,
    -  several schema : when projects or users are interrelated and should be able to use each other's resources

4. 여러개의 데이터베이스로 구성
    - 데이터베이스 클러스터

5. Thread Local
    - Java 지원 Thread safe 기술 스레드 환경에서 각각의 스레드에게 별도의 저장공간을 할당하여 별도의 상태를 갖을 수 있게끔 한다.
    - Spring 은 Bean 등록 시 해당 객체는 단 1개만 만들어져서 모든 Thread 가 공유하도록 되어 있기 때문에 해당 인스턴스의 모든 필드를 모든 Thread 가 사용하게 됨
    - 동시성 문제 : 여러 쓰레드가 동시에 같은 인스턴스의 필드 값을 변경하면서 발생하는 문제
    - 동시성 문제는 여러 쓰레드가 같은 인스턴스의 필드에 접근하기에 적은 트래픽 상황에서는 잘 없음
    - 스프링 빈 처럼 싱글톤 객체의 필드를 변경시 이런 동시성 문제 조심해야함
    - 지역 변수는 쓰레드마다 각각 다른 메모리 영역이 할당되어 동시성 문제는 발생하지 않는다.
    - 인스턴스의 필드(주로 싱글톤) 또는 static 같은 공용 필드에 접근할 때 발생
    - thread local 은 해당 쓰레드만 접근할 수 있는 특별한 저장소
    - was(tomcat) 은 Thread pool 기반으로 동작 -> ThreadLocal 의 데이터를 공유하게 될 수 있다.
    - Thread 의 사용이 끝나는 시점에 Thread Pool 에 반환하기 위해 반드시 ThreadLocal 초기화 작업 필수
    - Thread Class, ThreadLocal Class
        -

6. Thread Local 과 Postgresql Multiple Schema 사용 방법을 한번 보도록 하자
    - Thread class : Runnable 을 implements 한다.

