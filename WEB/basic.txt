1. WEB-INF 폴더 특징

현재 파일 기본 구조는 아래와 같이 나누어져 있다.

- src/main/webapp/resources
resources 폴더 아래 파일들은 비즈니스 로직없이도 가상의 결과물을 만들어 직접적으로 뷰를 볼 수 있다.
유저가 직접 jsp 파일에 접근이 가능하여 보안상 취약점이 발생할 수 있다.


- src/main/webapp/WEB-INF
resources 폴더 내부의 파일들과 달리 WEB-INF 폴더 하위에 있는 파일들은 컨트롤러를 거치지 않고 바로 url 로 접근이 불가능하다.
유저의 직접 접근이 불가하기 때문에 보안성을 가지고 있다.
<a> 앵커 테그로 이동이 불가하다
controller 를 통해야 접근이 가능하다.


2. MIME(Multipurpose Internet Mail Extensions)
: 전자 우편을 위한 인터넷 표준 포맷
전자 우편은 7비트 ASCII 문자를 사용하여 전송되기 때문에(인터넷 전자 우편 전송 프로토콜인 SMTP는 7비트 ASCII 문자만 지원
8비트 이상의 코드를 사용하는 문자나 이진 파일들은 MIME 포맷으로 변환되어
SMTP로 전송. SMTP 전송되는 대부분의 전자우편은 MIME 형식
*구글 이메일 회원가입 인증시 사용(admin 프로젝트)


3. HTTP 와 HTTPS 의 차이점
- HTTP : Hyper Text Transfer Protocol 의 약자로 텍스트 기반의 통신 규약으로 인터넷에서 데이터를 주고 받을 수 있는 프로토콜
- HTTP는 따로 암호화 과정을 거치지 않아 중간에 패킷을 가로챌 수 있고 수정이 가능 보안이 취약하기 때문에 HTTPS는 중간에 암호화 계층을 거쳐서 패킷을 암호화
- 요즘 브라우저들은 SSR 방식으로 통신하는데 SSR이란 Server Side Rendering 의 약자로 처음 클라이언트가 접속했을 때 브라우저에서 JS 코드를 다운로드 하여 해석할 때까지 기다리지 않고 서버에서 보일 HTML 을 미리 준비하여 클라이언트에게 응답해준다.

4. 브라우저에 URL 을 입력했을 때 서버로 전달되는 과정
- 브라우저에 URL 입력
   → DNS 서버에 들어가서 URL 을 가지고 ip 주소로 교환이 이루어짐
   → HTTP Request Message(요청 메시지) 생성
   → OS 프로토콜 스택에 메시지 전송 의뢰
   → 전기신호로 바꿔서 랜 케이블에 송출
   → 패킷은 허브, 스위치, 라우터를 거침
   → 프로바이더(ISP : 통신사)에게 전달 → POP (인터넷 핵심부로 들어가는 관문)
   → 수많은 고속 라우터에서 상대방의 서버에 도착
   → 방화벽에서 패킷 정상 인지 검사
   → 캐시서버 응답 데이터가 있는지 검증하여 없을때 웹서버에 전송
   → 웹서버에 전달시 was 전달
   → 응답 메시지를 만들어서 클라이언트에 전달 (같은 형태로)

5. 쿠키 & 세션
- HTTP는 상태와 연결에 대한 정보를 저장하지 않아 이를 도와주는 것
- 쿠기 : 사용자의 정보가 담긴 text 파일로 브라우저에 저장
        http header 에 담아서 전송, 쿠기의 정보 노출 가능하여 보안이 떨어짐
- 세션 : 서버에 정보를 저장하고 브라우저가 종료될때까지 정보가 유지되며 보안이 좀 더 강하다.

6. Rest API, RESTful
- Rest API : Rest 기반으로 서비스 API 구현
- Rest : 자원의 표현(uri)으로 상태(정보)를 주고받음
- 각각의 행동에 맞는 메서드 선택 중요( POST, GET, UPDATE< DELETE)
- Restful : Rest 원리를 잘 따르는 시스템

7. HTTP 응답 코드
- 100 ~ 500
- 100 : 조건부 응답 : 요청을 받았고 처리중
- 200 : 요청이 성공적으로 처리됨
- 300 : redirection : 사용자를 지정된 위치에 옮겨줌
- 400 : 클라이언트의 오류 (보내는 쪽에서의 오류)
- 500 :  서버의 오류